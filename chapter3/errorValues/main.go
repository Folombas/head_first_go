package main

import (
	"errors"
	"fmt"
	"os"
	"strconv"
	"time"
)

// üéØ 1. –ë–ê–ó–û–í–´–ï –û–®–ò–ë–ö–ò –° errors.New()
var (
	ErrInvalidInput  = errors.New("–Ω–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥")
	ErrFileNotFound  = errors.New("—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
	ErrNetworkFailed = errors.New("—Å–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞")
)

// üéØ 2. –ö–ê–°–¢–û–ú–ù–´–ï –¢–ò–ü–´ –û–®–ò–ë–û–ö
type ValidationError struct {
	Field   string
	Value   interface{}
	Message string
}

func (e ValidationError) Error() string {
	return fmt.Sprintf("–æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ–ª—è '%s': %s (–∑–Ω–∞—á–µ–Ω–∏–µ: %v)",
		e.Field, e.Message, e.Value)
}

type APIError struct {
	StatusCode int
	URL        string
	Message    string
	Timestamp  time.Time
}

func (e APIError) Error() string {
	return fmt.Sprintf("API –æ—à–∏–±–∫–∞ [%d] %s: %s (%s)",
		e.StatusCode, e.URL, e.Message, e.Timestamp.Format("2006-01-02 15:04:05"))
}

// üéØ 3. –§–£–ù–ö–¶–ò–Ø, –í–û–ó–í–†–ê–©–ê–Æ–©–ê–Ø –û–®–ò–ë–ö–ò
func divide(a, b float64) (float64, error) {
	if b == 0 {
		return 0, errors.New("–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å")
	}
	return a / b, nil
}

func validateUserAge(age int) error {
	if age < 0 {
		return ValidationError{
			Field:   "age",
			Value:   age,
			Message: "–≤–æ–∑—Ä–∞—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º",
		}
	}
	if age < 18 {
		return ValidationError{
			Field:   "age",
			Value:   age,
			Message: "—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö (18+)",
		}
	}
	if age > 150 {
		return ValidationError{
			Field:   "age",
			Value:   age,
			Message: "–≤–æ–∑—Ä–∞—Å—Ç —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π",
		}
	}
	return nil
}

func readConfigFile(filename string) error {
	if _, err := os.Stat(filename); os.IsNotExist(err) {
		return fmt.Errorf("%w: %s", ErrFileNotFound, filename)
	}
	// –°–∏–º—É–ª—è—Ü–∏—è —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
	return nil
}

// üéØ 4. –û–ë–ï–†–¢–´–í–ê–ù–ò–ï –û–®–ò–ë–û–ö (ERROR WRAPPING)
func processUserData(data map[string]string) error {
	ageStr, ok := data["age"]
	if !ok {
		return fmt.Errorf("processUserData: %w", ErrInvalidInput)
	}

	age, err := strconv.Atoi(ageStr)
	if err != nil {
		return fmt.Errorf("processUserData: –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞: %w", err)
	}

	if err := validateUserAge(age); err != nil {
		return fmt.Errorf("processUserData: –≤–∞–ª–∏–¥–∞—Ü–∏—è: %w", err)
	}

	return nil
}

// üéØ 5. –†–ê–ë–û–¢–ê –° –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ú–ò –û–®–ò–ë–ö–ê–ú–ò
type MultiError struct {
	Errors []error
}

func (e MultiError) Error() string {
	var messages []string
	for _, err := range e.Errors {
		messages = append(messages, err.Error())
	}
	return fmt.Sprintf("–Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—à–∏–±–æ–∫ (%d): %v", len(e.Errors), messages)
}

func validateUserProfile(profile map[string]string) error {
	var errs []error

	if name, ok := profile["name"]; !ok || name == "" {
		errs = append(errs, ValidationError{Field: "name", Message: "–∏–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"})
	}

	if ageStr, ok := profile["age"]; ok {
		if age, err := strconv.Atoi(ageStr); err == nil {
			if err := validateUserAge(age); err != nil {
				errs = append(errs, err)
			}
		} else {
			errs = append(errs, ValidationError{Field: "age", Message: "–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç"})
		}
	} else {
		errs = append(errs, ValidationError{Field: "age", Message: "–≤–æ–∑—Ä–∞—Å—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"})
	}

	if len(errs) > 0 {
		return MultiError{Errors: errs}
	}
	return nil
}

func main() {
	fmt.Println("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –û–®–ò–ë–û–ö –í GO")
	fmt.Println("===========================")

	// üéØ 1. –ë–∞–∑–æ–≤—ã–µ –æ—à–∏–±–∫–∏
	fmt.Println("\n1. –ë–ê–ó–û–í–´–ï –û–®–ò–ë–ö–ò:")
	result, err := divide(10, 0)
	if err != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è: %v\n", err)
	} else {
		fmt.Printf("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: %.2f\n", result)
	}

	// üéØ 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
	fmt.Println("\n2. –ü–†–û–í–ï–†–ö–ê –¢–ò–ü–û–í –û–®–ò–ë–û–ö:")

	// errors.Is() - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ—à–∏–±–∫–∏
	err = readConfigFile("missing_file.txt")
	if errors.Is(err, ErrFileNotFound) {
		fmt.Printf("üîç –ù–∞–π–¥–µ–Ω–∞ –æ—à–∏–±–∫–∞ —Ñ–∞–π–ª–∞: %v\n", err)
	}

	// errors.As() - –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ç–∏–ø–∞
	validationErr := validateUserAge(-5)
	if validationErr != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: %v\n", validationErr)

		var valErr ValidationError
		if errors.As(validationErr, &valErr) {
			fmt.Printf("üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: –ø–æ–ª–µ '%s', –∑–Ω–∞—á–µ–Ω–∏–µ: %v\n",
				valErr.Field, valErr.Value)
		}
	}

	// üéØ 3. –û–±–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
	fmt.Println("\n3. –û–ë–ï–†–¢–´–í–ê–ù–ò–ï –û–®–ò–ë–û–ö:")
	userData := map[string]string{"age": "abc"}
	if err := processUserData(userData); err != nil {
		fmt.Printf("‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö: %v\n", err)

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ø–æ—á–∫–∏ –æ—à–∏–±–æ–∫
		var numErr *strconv.NumError
		if errors.As(err, &numErr) {
			fmt.Printf("üîç –ß–∏—Å–ª–æ–≤–∞—è –æ—à–∏–±–∫–∞: %v\n", numErr.Err)
		}
	}

	// üéØ 4. –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
	fmt.Println("\n4. –ú–ù–û–ñ–ï–°–¢–í–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò:")
	profile := map[string]string{"name": "", "age": "abc"}
	if err := validateUserProfile(profile); err != nil {
		fmt.Printf("‚ùå –û—à–∏–±–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è: %v\n", err)

		var multiErr MultiError
		if errors.As(err, &multiErr) {
			fmt.Printf("üìä –ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: %d\n", len(multiErr.Errors))
			for i, e := range multiErr.Errors {
				fmt.Printf("   %d. %v\n", i+1, e)
			}
		}
	}

	// üéØ 5. PANIC –∏ RECOVER
	fmt.Println("\n5. PANIC –ò RECOVER:")

	safeDivide := func(a, b float64) (result float64, err error) {
		defer func() {
			if r := recover(); r != nil {
				err = fmt.Errorf("–ø–∞–Ω–∏–∫–∞ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–∞: %v", r)
			}
		}()

		if b == 0 {
			panic("–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!")
		}
		return a / b, nil
	}

	result, err = safeDivide(10, 0)
	if err != nil {
		fmt.Printf("üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ: %v\n", err)
	}

	// üéØ 6. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–¶–ï–ù–ê–†–ò–ò
	fmt.Println("\n6. –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –°–¶–ï–ù–ê–†–ò–ò:")

	// –°–∏–º—É–ª—è—Ü–∏—è API –≤—ã–∑–æ–≤–∞
	apiError := APIError{
		StatusCode: 404,
		URL:        "https://api.example.com/user/123",
		Message:    "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
		Timestamp:  time.Now(),
	}
	fmt.Printf("üåê API –æ—à–∏–±–∫–∞: %v\n", apiError)

	// üéØ –í–´–í–û–î–´
	fmt.Println("\nüí° –ö–õ–Æ–ß–ï–í–´–ï –ü–†–ò–ù–¶–ò–ü–´ –û–®–ò–ë–û–ö –í GO:")
	fmt.Println("‚úÖ –û—à–∏–±–∫–∏ - —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å error")
	fmt.Println("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ errors.New() –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫")
	fmt.Println("‚úÖ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
	fmt.Println("‚úÖ errors.Is() - –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ—à–∏–±–∫–∏")
	fmt.Println("‚úÖ errors.As() - –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ç–∏–ø–∞")
	fmt.Println("‚úÖ fmt.Errorf() —Å %w - –¥–ª—è –æ–±–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫")
	fmt.Println("‚úÖ defer/recover - –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∞–Ω–∏–∫")
	fmt.Println("‚ùå –ù–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –æ—à–∏–±–∫–∏ (–Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ _ –¥–ª—è –æ—à–∏–±–æ–∫!)")
}
